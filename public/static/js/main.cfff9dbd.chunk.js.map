{"version":3,"sources":["types/types.js","helpers/fetch.js","helpers/preperEvents.js","actions/events.js","actions/auht.js","hooks/useForm.js","components/auth/LoginScreen.js","helpers/calendar-messages-es.js","components/ui/Navbar.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","components/router/PrivateRoute.js","components/router/PublicRoute.js","components/router/AppRouter.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["types","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","prepareEvents","eventos","map","event","start","moment","toDate","end","eventLoaded","type","payload","eventAddNew","eventClearNoteEvent","eventUpdated","eventDeleted","checkingFinish","login","user","logout","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","dispatch","useDispatch","loginEmail","loginPassword","formLoginValues","handleLoginInputChange","registerName","registerEmail","registerPassword","registerPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","e","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","Navbar","useSelector","state","auth","onClick","clear","CalendarEvent","props","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minute","second","add","nowPlusOne","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","modalOpen","ui","activeEvent","calendar","dispatchCalendarModal","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","closeTimeMS","style","overlayClassName","eventoFormulario","evento","fechaInicio","fechaFin","isSameOrAfter","trim","id","console","log","getState","_id","minDate","autoComplete","rows","AddNewFab","dispatchAddNewFab","DeleteEventFab","localizer","momentLocalizer","locale","CalendarScreen","lastView","setLastView","dispatchCalendar","events","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","view","onSelectSlot","selectable","components","PrivateRoute","isAutenticated","MiComponent","component","rest","to","PublicRoute","AppRouter","checking","exact","path","rootReducer","combineReducers","action","ev","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cfff9dbd.chunk.js","sourcesContent":["\r\n\r\nexport const types = {\r\n    uiOpendModal: '[ui] Open Modal',\r\n    uiCloseModal: '[ui] Close Modal',\r\n\r\n    eventStartAddNew:'[event] Start add new',\r\n    eventSetActive: '[event] Set Active',\r\n    eventAddNew: '[event] Add New',\r\n    eventClearActiveEvent:'[event] Clear active event',\r\n    eventUpdated:'[event] Event updated',\r\n    eventDeleted:'[event] Event deleted',\r\n    eventLoaded:'[event] Events loaded',\r\n    eventLogout:'[event] Events logout',\r\n\r\n    authChecking:'[auth] Checking login state',\r\n    authCheckingFinish:'[auth] Finish checking login state',\r\n    authStartLogin:'[auth] Start login',\r\n    authLogin:'[auth] Login',\r\n    authStartRegister:'[auth] Start register',\r\n    authStartTokenRenew:'[auth] Start token renew',\r\n    authLogout:'[auth] Logout',\r\n}","const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nconst fetchSinToken = ( endpoint, data, method = 'GET' ) => {\r\n\r\n    const url = `${ baseUrl }/${ endpoint }`;\r\n\r\n    if ( method === 'GET' ) {\r\n        return fetch( url );\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    }\r\n}\r\n\r\nconst fetchConToken = ( endpoint, data, method = 'GET' ) => {\r\n\r\n    const url = `${ baseUrl }/${ endpoint }`;\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if ( method === 'GET' ) {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        });\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    }\r\n}\r\n\r\n\r\n\r\nexport {\r\n    fetchSinToken,\r\n    fetchConToken\r\n}","\r\nimport moment from 'moment';\r\n/* este helper se encargara de mappear las fechas de los evento, cuando las fechas vengan en formato string las transformara\r\n   a fechas de tipo date\r\n*/\r\n\r\nexport const prepareEvents = (eventos = []) => {\r\n\r\n    return eventos.map( event => {\r\n        return  {\r\n            ...event,\r\n            start: moment( event.start ).toDate(), // moment toma la fecha de tipo string  y genera una nueva con el .toDate()\r\n            end: moment( event.end ).toDate()\r\n        }\r\n    })\r\n\r\n}","import { fetchConToken } from \"../helpers/fetch\";\r\nimport { prepareEvents } from \"../helpers/preperEvents\";\r\nimport { types } from \"../types/types\";\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\nexport const eventStartAddNew = (eventoFormulario) => {\r\n    return async( dispatch, getState ) => {\r\n\r\n        const { uid, name } = getState().auth;\r\n\r\n        try {\r\n            const resp = await fetchConToken('events', eventoFormulario, 'POST');\r\n            const body = await resp.json();\r\n\r\n            if(body.ok) {\r\n                eventoFormulario.id = body.evento.id;\r\n                eventoFormulario.user = {\r\n                    _id : uid,\r\n                    name: name\r\n\r\n                };\r\n                 dispatch( eventAddNew( eventoFormulario ) );\r\n            }\r\n     \r\n        } catch (error) {\r\n            console.log( 'Error al intentar guardar el evento', error );\r\n            \r\n        }\r\n    }\r\n}\r\n\r\nexport const eventStartLoading = () => {\r\n    return async( dispatch) => {\r\n        \r\n        try {\r\n            const resp = await fetchConToken('events');\r\n            const body =  await resp.json();\r\n            const eventos = prepareEvents(body.eventos); // transformo las fecha de string a Date\r\n\r\n            dispatch( eventLoaded( eventos ) );\r\n\r\n        } catch (error) {\r\n            console.log(\"Error al intentar recuperar los eventos..! \", error);\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nconst eventLoaded = ( eventos ) => ({\r\n     type: types.eventLoaded,\r\n     payload: eventos\r\n})\r\n\r\nconst eventAddNew = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n});\r\n\r\nexport const eventSetActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n});\r\n\r\n\r\nexport const eventClearNoteEvent = () => ({\r\n    type: types.eventClearActiveEvent\r\n});\r\n\r\nexport const eventStartUpdate = ( evento ) => {\r\n    return async(dispatch) => {\r\n\r\n        try {\r\n\r\n            const resp = await fetchConToken(`events/${ evento.id }`, evento, 'PUT');\r\n            const body = await resp.json();\r\n\r\n            if (body.ok) {\r\n                dispatch( eventUpdated( evento ));\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error'); \r\n            }\r\n            \r\n        } catch (error) {\r\n            console.log(\"Error al intentar actualizar el evento...!\", error);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventUpdated = (event) => ({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n});\r\n\r\nexport const eventStartDelete = (evento) => {\r\n    return async(dispatch, getState) => {\r\n        const { id } = getState().calendar.activeEvent;\r\n         try {\r\n\r\n            const resp = await fetchConToken(`events/${ id }`, {}, 'DELETE');\r\n            const body = await resp.json();\r\n\r\n            if (body.ok) {\r\n                dispatch( eventDeleted());\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error'); \r\n            }\r\n            \r\n        } catch (error) {\r\n            console.log(\"Error al intentar Eliminar el evento...!\", error);\r\n        }\r\n    }\r\n}\r\n\r\n const eventDeleted = () => ({\r\n    type: types.eventDeleted\r\n});\r\n\r\nexport const eventLogout = () => ({\r\n    type: types.eventLogout\r\n})","import { types } from \"../types/types\";\r\nimport Swal from 'sweetalert2';\r\nimport { fetchSinToken, fetchConToken } from '../helpers/fetch' \r\nimport { eventLogout } from \"./events\";\r\n\r\n\r\nexport const startLogin = (email, password) => {\r\n    /* Retorno una funcion porq esta accion es asincrona, recordar que thunk me ofrece un conjunto de weas como argumentos en el callback */\r\n    return async( dispatch ) => {\r\n\r\n        const resp =  await fetchSinToken('auth', { email, password }, 'POST');\r\n        const body =  await resp.json();\r\n    \r\n        if(body.ok){\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const startRegister = ( email, password, name) => {\r\n\r\n    return async( dispatch ) => {\r\n        \r\n        const resp =  await fetchSinToken('auth/new', { email, password, name }, 'POST');\r\n        const body =  await resp.json();\r\n\r\n        if(body.ok){\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\nexport const startChecking = () => {\r\n    return async( dispatch ) => {\r\n        \r\n        const resp =  await fetchConToken('auth/renew');\r\n        const body =  await resp.json();\r\n\r\n        if(body.ok){\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n        } else {\r\n            dispatch( checkingFinish() );\r\n        }\r\n    }\r\n}\r\n\r\nconst checkingFinish = ()=>({ type: types.authCheckingFinish });\r\n\r\nexport const startLogout = () => {\r\n    return async( dispatch ) => {\r\n        await localStorage.clear(); // decisidí usar await porq la gestion del localstorage es considerada asincrona\r\n        dispatch( eventLogout() );\r\n        dispatch( logout() );\r\n    }\r\n}\r\n\r\n\r\n\r\nconst login = ( user ) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n});\r\n\r\nconst logout = () => ({\r\n    type: types.authLogout\r\n})","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { startLogin, startRegister } from '../../actions/auht';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport Swal  from 'sweetalert2';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [ formLoginValues, handleLoginInputChange, reset ] = useForm({   \r\n        loginEmail: 'carlos2@email.com',\r\n        loginPassword: '123456'\r\n    });\r\n\r\n    const [ formRegisterValues, handleRegisterInputChange, registerReset ] = useForm( {   \r\n        registerName: 'Cart',\r\n        registerEmail: 'carlos3@email.com',\r\n        registerPassword: '123456',\r\n        registerPassword2: '123456'\r\n    } );\r\n\r\n    const { loginEmail, loginPassword } = formLoginValues;\r\n    const { registerName, registerEmail, registerPassword, registerPassword2 } = formRegisterValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch( startLogin(loginEmail, loginPassword) );\r\n    }\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        if( registerPassword !== registerPassword2) {\r\n            return Swal.fire('Error', 'Las cantraseñas deben ser iguales', 'error');\r\n        }\r\n\r\n        dispatch( startRegister(registerEmail, registerPassword, registerName));\r\n    }\r\n    \r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={ handleLogin }>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"loginEmail\"\r\n                                value={ loginEmail }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"loginPassword\"\r\n                                value={ loginPassword }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\"\r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={ handleRegister }>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name = 'registerName'\r\n                                value = { registerName }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name = 'registerEmail'\r\n                                value = { registerEmail }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name = 'registerPassword'\r\n                                value = { registerPassword }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\"\r\n                                name = 'registerPassword2'\r\n                                value = { registerPassword2 }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","\r\n/* este obj es para establecer el idioma en español para el calendario */\r\nexport const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auht';\r\n\r\nexport const Navbar = () => {\r\n\r\n    const { name }  = useSelector(state =>  state.auth );\r\n    const dispatch = useDispatch();\r\n\r\n    const handleLogut = () => {\r\n        dispatch(  startLogout() );\r\n    }\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n\r\n            <span className =\"navbar-brand\">\r\n                { name }\r\n            </span>\r\n\r\n            <button type=\"button\"\r\n                className=\"btn btn-outline-danger\"\r\n                onClick = { handleLogut }\r\n                >\r\n                <i className=\"fa fa-sign-out-alt\"></i>\r\n                <span> Salir </span>\r\n            </button>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const CalendarEvent = ( props ) => {\r\n\r\n    // console.log('CalendarEvent ', props);\r\n\r\n    const {title, user } = props.event;\r\n\r\n    return (\r\n        <div>\r\n            <span> { title } </span>\r\n            <strong> { user.name }</strong>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\"\r\n\r\n\r\nexport const uiOpenModal = () => ({\r\n    type: types.uiOpendModal\r\n});\r\n\r\n\r\nexport const uiCloseModal = () => ({\r\n    type: types.uiCloseModal\r\n});","import React, { useEffect, useState } from 'react'\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventClearNoteEvent, eventStartAddNew, eventStartUpdate } from '../../actions/events';\r\n/* este componente se creó siguiendo la documentacion de react-modal -> https://www.npmjs.com/package/react-modal#examples */\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n    },\r\n};\r\nModal.setAppElement('#root'); //#root es el  <div id=\"root\"></div>  que esta en index.html\r\nconst now = moment().minute(0).second(0).add(1, 'hours'); // para q me retorne una hora MAS a la actual, es decir, si son las 2:25:21 retornará 3:00:00, \r\nconst nowPlusOne = now.clone().add(1, 'hours'); // se debe clonar, sino modificaré el objeto now\r\n\r\nconst initEvent = {\r\n    title:'',\r\n    notes:'',\r\n    start: now.toDate(),\r\n    end: nowPlusOne.toDate()\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const [dateStart, setDateStart] = useState( now.toDate() );\r\n    const [dateEnd, setDateEnd] = useState( nowPlusOne.toDate() );\r\n    const [titleValid, setTitleValid] = useState(true);\r\n    const { modalOpen } = useSelector(state => state.ui);\r\n    const { activeEvent } = useSelector(state => state.calendar);\r\n    const dispatchCalendarModal = useDispatch();\r\n\r\n    const [formValues, setFormValues] = useState(initEvent);\r\n\r\n    const { notes, title, start, end } = formValues;\r\n\r\n    useEffect(() => {\r\n        if(activeEvent){\r\n            setFormValues( activeEvent );\r\n        } else {\r\n            setFormValues( initEvent );\r\n        }\r\n    }, [activeEvent, setFormValues])\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value //uso [] porque quiero computar el nombre de la propiedad\r\n        });\r\n    }\r\n\r\n    const closeModal = (e) => {\r\n        dispatchCalendarModal( uiCloseModal() );\r\n        dispatchCalendarModal( eventClearNoteEvent() );\r\n        setFormValues( initEvent );\r\n    };\r\n\r\n    const handleStartDateChange = (e) => {\r\n        setDateStart(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        })\r\n    };\r\n\r\n    const handleEndDateChange = (e) => {\r\n        setDateEnd(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        })\r\n    };\r\n\r\n    const handleSubmitForm = ( e ) => {\r\n        e.preventDefault();\r\n        \r\n        const fechaInicio = moment( start ); //las convierto de un obj fecha de javascript a un obj fecha de tipo moment para poder trabajar mas facilmente\r\n        const fechaFin = moment( end );\r\n        \r\n        if( fechaInicio.isSameOrAfter( fechaFin ) ) {\r\n             Swal.fire('La fecha fin debe de ser mayor a la fecha de inicio', 'error');\r\n             return;\r\n        }\r\n\r\n        if(title.trim() < 2){\r\n            setTitleValid(false);\r\n            return;\r\n        }\r\n\r\n        // TODO: save in BBDD\r\n        if(activeEvent){\r\n            dispatchCalendarModal( eventStartUpdate( formValues ) );\r\n        } else {\r\n            dispatchCalendarModal( eventStartAddNew( formValues ) );\r\n        }\r\n\r\n        setTitleValid(true);\r\n        closeModal();\r\n    }\r\n\r\n    return (\r\n        /* <Modal> <Modal/> es un componente de orden superior */\r\n        <Modal \r\n            isOpen = { modalOpen } // prob booleana q se encarga de ocultar/mostrar el modal\r\n            // onAfterOpen={afterOpenModal}\r\n            onRequestClose = { closeModal }\r\n            closeTimeMS = { 200 } // para que se cierre el modal en 200 milesimas de segundo \r\n            style = { customStyles }\r\n            // contentLabel=\"Example Modal\"\r\n            className = \"modal\"\r\n            overlayClassName = \"modal-fondo\"\r\n        >\r\n            <h1> { (activeEvent) ? 'Editar evento' : 'Nuevo evento' }  </h1>\r\n            <hr />\r\n            <form className=\"container\"\r\n                onSubmit ={ handleSubmitForm }\r\n            >\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    {/* el COMPONENTE DateTimePicker se encuantra en  DateTimePicker*/}\r\n                    <DateTimePicker \r\n                        onChange={ handleStartDateChange }\r\n                        value={ dateStart }\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker \r\n                        onChange={ handleEndDateChange }\r\n                        value={ dateEnd }\r\n                        minDate={ dateStart } // para asegurarme q la fecha de finalizacion no se menor a la inicio\r\n                        className=\"form-control\"\r\n                       // format=\"y-MM-dd h:mm:ss a\" // ojo que aqui modifique el formato para probar opciones de visualizacion\r\n                       // amPmAriaLabel=\"Select AM/PM\"\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className={`form-control ${ !titleValid && 'is-invalid' }` }\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        value = { title }\r\n                        onChange = { handleInputChange }\r\n                        autoComplete=\"off\"\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value = { notes }\r\n                        onChange = { handleInputChange }\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n        </Modal>\r\n\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    const dispatchAddNewFab = useDispatch();\r\n\r\n    const handleClickNew = (e) => {\r\n        e.preventDefault();\r\n        dispatchAddNewFab( uiOpenModal() );\r\n\r\n    }\r\n\r\n    return (\r\n        <button className=\"btn btn-primary fab\" onClick={ handleClickNew }>\r\n            <i className=\"fas fa-plus\"></i>\r\n            \r\n        </button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { eventStartDelete } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handleDeleted = (e) => {\r\n        e.preventDefault();\r\n        dispatch( eventStartDelete() );\r\n    }\r\n    return (\r\n        <button\r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick={ handleDeleted }\r\n\r\n        >\r\n            <i className=\"fas fa-trash\">\r\n                \r\n            </i>\r\n            <span>  Borrar event</span>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport 'moment/locale/es'; // importo la configuracion para trabajar con fechas en español (esto es, le digo a moment que trabajaré en español)\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css'; // importo los estilos de big calendar( los proporsiona la propia do cumentacion ->http://jquense.github.io/react-big-calendar/examples/index.html)\r\nimport { useDispatch } from 'react-redux';\r\nimport { useState } from 'react';\r\n\r\nimport { messages } from '../../helpers/calendar-messages-es';\r\nimport { Navbar } from '../ui/Navbar';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventClearNoteEvent, eventSetActive, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { useSelector } from 'react-redux';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\nimport { useEffect } from 'react';\r\n\r\nconst localizer = momentLocalizer(moment); // se inicializa el localizer\r\nmoment.locale('es'); // establezco el idioma de preferencia\r\n\r\n/* Creo una pequeña lista de eventos para pasarsela al componente  Calendar*/\r\nconst events = [{\r\n    title:'Cumpleaños del jefe',\r\n    start: moment().toDate(), // es el equivalente en moment de new date() en javascript\r\n    end: moment().add( 2, 'hours' ).toDate(), // le digo que la fecha de finalizacion será 2 horas despues del inicio\r\n    bgcolor: '#fafafa',\r\n    notes: 'Comprar pastel',\r\n    user: {\r\n        _id: '123',\r\n        name: 'Carlitos'\r\n    }\r\n}]\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\r\n    const dispatchCalendar = useDispatch();\r\n    const { events, activeEvent } = useSelector(state => state.calendar);\r\n    const { uid } = useSelector(state => state.auth);\r\n\r\n    useEffect(()=> {\r\n        dispatchCalendar( eventStartLoading() );\r\n    }, [dispatchCalendar]);\r\n\r\n\r\n    const onDoubleClick = (e) => {\r\n        console.log(e);\r\n        dispatchCalendar( uiOpenModal() );\r\n    }\r\n    \r\n    const onSelectEvent = (e) => {\r\n        // console.log(\"evento en el calendario\")\r\n        dispatchCalendar( eventSetActive(e) );\r\n    }\r\n\r\n    /* este evento se disparará cuando de click en los botones Mes/Semana/Día/Agenda */\r\n    const onViewChange = (e) => {\r\n        console.log('e -> ', e);\r\n        setLastView(e);\r\n        localStorage.setItem('lastView', e)\r\n    }\r\n\r\n\r\n\r\n    const evenStyleGetter = (event, start, end, isSelected) => {\r\n        // console.log(event, start, end, isSelected);\r\n\r\n\r\n        const style = {\r\n            backgroundColor: ( uid ===event.user._id ) ? '#367CF7' : '#465660', // si el evento es propio aparecerá en azul, si es ajeno en gris\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white',    \r\n        }\r\n\r\n        return {\r\n            style\r\n        }\r\n    }\r\n\r\n    const onSelectSlot = (e) => {\r\n        // console.log(e);\r\n        dispatchCalendar( eventClearNoteEvent() )\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div  className=\"calendar-screen\"> {/* esto es necesario para poder ver el calendario cuando pincho en months */}\r\n            <Navbar />\r\n\r\n            <Calendar\r\n                localizer={ localizer }\r\n                events={ events }\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages= { messages } // para configurar el calendario en español\r\n                eventPropGetter= { evenStyleGetter } // eventPropGetter se llama cuando se renderiza el componente Calendar\r\n                onDoubleClickEvent = { onDoubleClick }\r\n                onSelectEvent = { onSelectEvent } // se dispara cada que selecciono un evento en el calendario\r\n                onView = { onViewChange } //  este evento se disparará cuando de click en los botones Mes/Semana/Día/Agenda\r\n                view = { lastView } // para conservar la vista actual si llegase a recargar la app, es decir, si estoy en la vista de agenda y recargo seguiré viendo la vista de agenda\r\n                onSelectSlot = { onSelectSlot } // es dispara cuando hago click en cualquiera de las celdas de calendario, para que esta funcion se llame  la propiedad selectable = { true } debe estar en true\r\n                selectable = { true } \r\n                components = { {\r\n                        event: CalendarEvent // ojo q no se le pasa el component con < /> como -> <CalendarEvent />, solo se la pasa LA REFERENCIA  al componenete, este ultimo recibe como pros un obj que contiene mucha info, ver el console.log en en la deficion de CalendarEvent\r\n                } } \r\n            />\r\n\r\n\r\n            <AddNewFab />\r\n            {\r\n                activeEvent &&  <DeleteEventFab />\r\n            }\r\n           \r\n            <CalendarModal />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types'; /* impt más tab para importar */\r\n\r\n//...rest almacenaré el resto de parametos, ejemplo el exact, el path etc\r\nexport const PrivateRoute = ({ isAutenticated,  component: MiComponent, ...rest }) => { \r\n   \r\n   \r\n    return (\r\n        <Route\r\n            {...rest}\r\n            component= { (props) => (\r\n                (isAutenticated)\r\n                    ? (<MiComponent {...props} />) /* si esta autenticado retornara el componente al que deseo ir */\r\n                    : (<Redirect to=\"/login\" />) /* si  no esta autenticado redirijo al login*/\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = { // propTypes con p minuzcula \r\n   isAutenticated: PropTypes.bool.isRequired, // PropTypes con p mayuscula\r\n   component: PropTypes.func.isRequired  // component es una funcion por eso se usa func\r\n}\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types'; /* impt más tab para importar */\r\n\r\nexport const PublicRoute = ({ isAutenticated,  component: MiComponent, ...rest }) => { //...rest almacenaré el resto de parametos, ejemplo el exact, el path etc\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            component= { (props) => (\r\n                ( isAutenticated )\r\n                    ? (<Redirect to=\"/\" />) /* si  no esta autenticado redirijo al dashboard*/\r\n                    : (<MiComponent {...props} />) /* si esta autenticado retornara el componente al que deseo ir */\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = { // propTypes con p minuzcula \r\n   isAutenticated: PropTypes.bool.isRequired, // PropTypes con p mayuscula\r\n   component: PropTypes.func.isRequired  // component es una funcion por eso se usa func\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport { startChecking } from '../../actions/auht';\r\nimport { LoginScreen } from '../auth/LoginScreen';\r\nimport { CalendarScreen } from '../calendar/CalendarScreen';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { checking, uid  }  = useSelector(state => state.auth);\r\n\r\n    useEffect(()=>{\r\n        dispatch( startChecking() );\r\n        console.log(\"Disparando el estar startChecking\");\r\n    },[dispatch])\r\n\r\n    if( checking ){\r\n        return (<h5> Espere...!</h5>);\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    \r\n                    <PublicRoute\r\n                        exact path=\"/login\"\r\n                        component = { LoginScreen }\r\n                        isAutenticated = { !!uid }\r\n                    />\r\n                    <PrivateRoute\r\n                        exact path=\"/\"\r\n                        component = { CalendarScreen }\r\n                        isAutenticated = { !!uid }\r\n                    />\r\n                    <Redirect to=\"/\" />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true,\r\n    //uid: null,\r\n    //name: null\r\n}\r\n\r\nexport const authReducer = (state = initialState , action) => {\r\n    switch (action.type) {\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                checking:false                \r\n            }\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking:false\r\n            }\r\n        case types.authLogout:\r\n            return {\r\n                checking:false\r\n            }\r\n    \r\n        default:\r\n           return state;\r\n    }\r\n}","import moment from \"moment\";\r\nimport { types } from \"../types/types\";\r\n\r\n/* estructura de un evento \r\n    {\r\n        id: ''adsasdasdfasdfsadf,\r\n        title: 'Cumpleaños del jefe',\r\n        start: moment().toDate(), // es el equivalente en moment de new date() en javascript\r\n        end: moment().add(2, 'hours').toDate(), // le digo que la fecha de finalizacion será 2 horas despues del inicio\r\n        notes: 'Comprar pastel',\r\n        user: {\r\n            _id: '123',\r\n            name: 'Carlitos'\r\n        }\r\n    } */\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n};\r\n\r\n\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [\r\n                    ...state.events,\r\n                    action.payload\r\n                ]\r\n            }\r\n        case types.eventClearActiveEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.eventUpdated:\r\n        return {\r\n            ...state,\r\n           events: state.events.map( ev => ev.id === action.payload.id ? action.payload : ev) \r\n        }\r\n\r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n               events: state.events.filter( ev => ev.id !==  state.activeEvent.id),\r\n               activeEvent: null // elimina del store la nota activa xq la estoy eliminando\r\n            }\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events: [ ...action.payload ]\r\n            }\r\n        case types.eventLogout:\r\n            return {\r\n                ...initialState\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen : false,\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.uiOpendModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true,\r\n            }\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false,\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","\r\nimport { combineReducers } from \"redux\";\r\nimport { authReducer } from \"./authReducer\";\r\nimport { calendarReducer } from \"./calendarReducer\";\r\nimport { uiReducer } from \"./uiReducer\";\r\n\r\n\r\n\r\n/* Este rootReducer es el reducer PADRE que combinará el resto de los reducers */\r\nexport const rootReducer = combineReducers({\r\n    ui:uiReducer, // my firt reducer\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n});\r\n","import { createStore, compose, applyMiddleware} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from '../reducers/rootReducer';\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n);","import React from 'react'\r\nimport { Provider }  from 'react-redux';\r\nimport { AppRouter } from './components/router/AppRouter'\r\nimport { store } from './store/store';\r\n\r\nconsole.log('info en .env.development',process.env);\r\n\r\nconst CalendarApp = () => {\r\n    return (\r\n        <Provider store = { store } >\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n\r\nexport default CalendarApp\r\n\r\n\r\n/* Intalaciones de este proyecto:\r\n\r\n    npm i react-router-dom\r\n    https://cdnjs.com/libraries/font-awesome (CDN: <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\" integrity=\"sha512-Fo3rlrZj/k7ujTnHg4CGR2D7kSs0v4LLanw2qksYuRlEzO+tcaEPQogQ0KaoGN26/zrn20ImR1DfuLWnOo7aBA==\" crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\" />)\r\n    npm i react-big-calendar: https://www.npmjs.com/package/react-big-calendar (para trabajar con calendarios)\r\n    npm i moment\r\n    npm i react-modal: https://www.npmjs.com/package/react-modal\r\n    npm i react-datetime-picker: https://www.npmjs.com/package/react-datetime-picker\r\n    npm i sweetalert2\r\n    npm install react-redux: https://react-redux.js.org/introduction/getting-started\r\n    npm i redux-thunk: https://www.npmjs.com/package/redux-thunk\r\n    NOTA: cada vez que se haga una modificaion en los archivos .env.xyz se debe bajar y subir nuevamente el servidor para que el entorno pueda reconocer las variables\r\n    Para iniciar session heroku:\r\n        1: Para la parte front, generar el build que irá a prod: npm run build \r\n        12: heroku --> user cristianmsilvah4356@gmail.com, password el.......2...*\r\n*/","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CalendarApp from './CalendarApp';\nimport './styles.css';\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}